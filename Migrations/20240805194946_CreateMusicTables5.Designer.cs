// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TunifyPlatform.Data;

#nullable disable

namespace TunifyPlatform.Migrations
{
    [DbContext(typeof(TunifyDbContext))]
    [Migration("20240805194946_CreateMusicTables5")]
    partial class CreateMusicTables5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TunifyPlatform.Models.Album", b =>
                {
                    b.Property<int>("AlbumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlbumID"));

                    b.Property<string>("Album_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ArtistID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Release_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("AlbumID");

                    b.HasIndex("ArtistID");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            AlbumID = 1,
                            Album_Name = "Greatest Hits",
                            ArtistID = 1,
                            Release_Date = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AlbumID = 2,
                            Album_Name = "Classic Collection",
                            ArtistID = 2,
                            Release_Date = new DateTime(2021, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AlbumID = 3,
                            Album_Name = "coding hard",
                            ArtistID = 3,
                            Release_Date = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TunifyPlatform.Models.Artist", b =>
                {
                    b.Property<int>("ArtistID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistID"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtistID");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            ArtistID = 1,
                            Bio = "sing about how hard life is and why you should never give up",
                            Name = "Black litte"
                        },
                        new
                        {
                            ArtistID = 2,
                            Bio = "he is always sign about people who are try to be his friend but they are really far his money",
                            Name = "gold digger"
                        },
                        new
                        {
                            ArtistID = 3,
                            Bio = "he is always sign about people who are try to code better then him and he doesn't like it",
                            Name = "coder"
                        });
                });

            modelBuilder.Entity("TunifyPlatform.Models.PlayList", b =>
                {
                    b.Property<int>("PlayListID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayListID"));

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Playlist_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("PlayListID");

                    b.HasIndex("UserID");

                    b.ToTable("Playlists");

                    b.HasData(
                        new
                        {
                            PlayListID = 1,
                            Created_Date = new DateTime(2022, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Playlist_Name = "Hits",
                            UserID = 1
                        },
                        new
                        {
                            PlayListID = 2,
                            Created_Date = new DateTime(2022, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Playlist_Name = "Favorites",
                            UserID = 2
                        },
                        new
                        {
                            PlayListID = 3,
                            Created_Date = new DateTime(2024, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Playlist_Name = "coding music",
                            UserID = 3
                        });
                });

            modelBuilder.Entity("TunifyPlatform.Models.PlayListSong", b =>
                {
                    b.Property<int>("PlayListID")
                        .HasColumnType("int");

                    b.Property<int>("SongID")
                        .HasColumnType("int");

                    b.Property<int>("PlayListSongID")
                        .HasColumnType("int");

                    b.HasKey("PlayListID", "SongID");

                    b.HasIndex("SongID");

                    b.ToTable("PlaylistsSong");
                });

            modelBuilder.Entity("TunifyPlatform.Models.Song", b =>
                {
                    b.Property<int>("SongID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SongID"));

                    b.Property<int>("AlbumID")
                        .HasColumnType("int");

                    b.Property<int>("ArtistID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Durtion")
                        .HasColumnType("time");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SongID");

                    b.HasIndex("AlbumID");

                    b.HasIndex("ArtistID");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            SongID = 1,
                            AlbumID = 1,
                            ArtistID = 1,
                            Durtion = new TimeSpan(0, 0, 3, 45, 0),
                            Genre = "Pop",
                            Title = "black litte don't give up to soon son"
                        },
                        new
                        {
                            SongID = 2,
                            AlbumID = 2,
                            ArtistID = 2,
                            Durtion = new TimeSpan(0, 0, 4, 20, 0),
                            Genre = "r&b",
                            Title = "gold digger: why is everything about! yeah "
                        },
                        new
                        {
                            SongID = 3,
                            AlbumID = 3,
                            ArtistID = 3,
                            Durtion = new TimeSpan(0, 0, 8, 10, 0),
                            Genre = "r&b",
                            Title = "coding hard "
                        });
                });

            modelBuilder.Entity("TunifyPlatform.Models.Subscripition", b =>
                {
                    b.Property<int>("SubscripitionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscripitionID"));

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Subscription_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubscripitionID");

                    b.ToTable("Subscripitions");

                    b.HasData(
                        new
                        {
                            SubscripitionID = 1,
                            Price = 10,
                            Subscription_Type = "Basic"
                        },
                        new
                        {
                            SubscripitionID = 2,
                            Price = 20,
                            Subscription_Type = "Premium"
                        },
                        new
                        {
                            SubscripitionID = 3,
                            Price = 20,
                            Subscription_Type = "Premium"
                        });
                });

            modelBuilder.Entity("TunifyPlatform.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Join_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubscripitionID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("SubscripitionID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Email = "bluewind@gmial.com",
                            Join_Date = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubscripitionID = 1,
                            Username = "frog man"
                        },
                        new
                        {
                            UserID = 2,
                            Email = "dreamwive@gmial.com",
                            Join_Date = new DateTime(2021, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubscripitionID = 2,
                            Username = "flying boy"
                        },
                        new
                        {
                            UserID = 3,
                            Email = "coding.studying@gmial.com",
                            Join_Date = new DateTime(1991, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubscripitionID = 3,
                            Username = "coding boy"
                        });
                });

            modelBuilder.Entity("TunifyPlatform.Models.Album", b =>
                {
                    b.HasOne("TunifyPlatform.Models.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("TunifyPlatform.Models.PlayList", b =>
                {
                    b.HasOne("TunifyPlatform.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TunifyPlatform.Models.PlayListSong", b =>
                {
                    b.HasOne("TunifyPlatform.Models.PlayList", "PlayList")
                        .WithMany("PlayListSong")
                        .HasForeignKey("PlayListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TunifyPlatform.Models.Song", "Song")
                        .WithMany("PlayListSong")
                        .HasForeignKey("SongID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayList");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("TunifyPlatform.Models.Song", b =>
                {
                    b.HasOne("TunifyPlatform.Models.Album", "Album")
                        .WithMany()
                        .HasForeignKey("AlbumID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TunifyPlatform.Models.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("TunifyPlatform.Models.User", b =>
                {
                    b.HasOne("TunifyPlatform.Models.Subscripition", "Subscripition")
                        .WithMany()
                        .HasForeignKey("SubscripitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscripition");
                });

            modelBuilder.Entity("TunifyPlatform.Models.PlayList", b =>
                {
                    b.Navigation("PlayListSong");
                });

            modelBuilder.Entity("TunifyPlatform.Models.Song", b =>
                {
                    b.Navigation("PlayListSong");
                });
#pragma warning restore 612, 618
        }
    }
}
